import {InferInsertModel} from 'drizzle-orm';
import {db} from '~/server/db';
import {courseRankings, courses, users} from '~/server/db/schema';

export async function popScript() {
  const newCourseRankings: InferInsertModel<typeof courseRankings>[] = [
    // Rankings by Alice
    {
      courseId: 20109,
      userId: 2,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '95',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20229,
      userId: 2,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '85',
      interestLevel: '3',
      createdAt: new Date(),
    },
    {
      courseId: 20474,
      userId: 2,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '90',
      interestLevel: '5',
      createdAt: new Date(),
    },
    {
      courseId: 20475,
      userId: 2,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '92',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20425,
      userId: 2,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '88',
      interestLevel: '3',
      createdAt: new Date(),
    },
    // Rankings by Bob
    {
      courseId: 20109,
      userId: 3,
      assignmentDifficulty: '2',
      examDifficulty: '1',
      grade: '80',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20229,
      userId: 3,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '85',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20474,
      userId: 3,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '90',
      interestLevel: '5',
      createdAt: new Date(),
    },
    {
      courseId: 20475,
      userId: 3,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '88',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20425,
      userId: 3,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '92',
      interestLevel: '5',
      createdAt: new Date(),
    },
    // Rankings by Charlie
    {
      courseId: 20109,
      userId: 4,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '85',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20229,
      userId: 4,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '90',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20474,
      userId: 4,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '88',
      interestLevel: '5',
      createdAt: new Date(),
    },
    {
      courseId: 20475,
      userId: 4,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '92',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20425,
      userId: 4,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '90',
      interestLevel: '5',
      createdAt: new Date(),
    },
    // Rankings by Eve
    {
      courseId: 20109,
      userId: 5,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '90',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20229,
      userId: 5,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '85',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20474,
      userId: 5,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '88',
      interestLevel: '5',
      createdAt: new Date(),
    },
    {
      courseId: 20475,
      userId: 5,
      assignmentDifficulty: '3',
      examDifficulty: '2',
      grade: '90',
      interestLevel: '4',
      createdAt: new Date(),
    },
    {
      courseId: 20425,
      userId: 5,
      assignmentDifficulty: '4',
      examDifficulty: '3',
      grade: '92',
      interestLevel: '5',
      createdAt: new Date(),
    },
  ];

  const res =
      await db.insert(courseRankings).values(newCourseRankings).execute();
  return res;
}